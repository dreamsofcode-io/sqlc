// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: item.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const findByID = `-- name: FindByID :one
SELECT id, name, value FROM item WHERE id = $1
`

func (q *Queries) FindByID(ctx context.Context, id uuid.UUID) (Item, error) {
	row := q.db.QueryRow(ctx, findByID, id)
	var i Item
	err := row.Scan(&i.ID, &i.Name, &i.Value)
	return i, err
}

const findByName = `-- name: FindByName :one
SELECT id, name, value FROM item WHERE name = $1
`

func (q *Queries) FindByName(ctx context.Context, name string) (Item, error) {
	row := q.db.QueryRow(ctx, findByName, name)
	var i Item
	err := row.Scan(&i.ID, &i.Name, &i.Value)
	return i, err
}

const updateName = `-- name: UpdateName :exec
UPDATE item SET name = $1 WHERE id = $2
`

type UpdateNameParams struct {
	Name string    `json:"name"`
	ID   uuid.UUID `json:"id"`
}

func (q *Queries) UpdateName(ctx context.Context, arg UpdateNameParams) error {
	_, err := q.db.Exec(ctx, updateName, arg.Name, arg.ID)
	return err
}
